# Generated by Django 3.2.16 on 2023-01-17 01:49

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import hashid_field.field


def convert_objs(apps, schema_editor):
    ResearchGroup = apps.get_model("frontend", "ResearchGroup")
    ResearchGroup2 = apps.get_model("frontend", "ResearchGroup2")
    for g in ResearchGroup.objects.all():
        g2 = ResearchGroup2.objects.create(name=g.name, PI=g.PI)
        for p in g.members.all():
            p.member_of2 = g2

    ClassGroup = apps.get_model("frontend", "ClassGroup")
    ClassGroup2 = apps.get_model("frontend", "ClassGroup2")
    for g in ClassGroup.objects.all():
        g2 = ClassGroup2.objects.create(
            name=g.name,
            professor=g.professor,
            user_resource_threshold=g.user_resource_threshold,
            group_resource_threshold=g.group_resource_threshold,
            access_code=g.access_code,
        )
        for p in g.members.all():
            p.in_class2 = g2


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("frontend", "0010_alter_resourceallocation_note"),
    ]

    operations = [
        migrations.CreateModel(
            name="ResearchGroup2",
            fields=[
                (
                    "name",
                    models.CharField(max_length=150, unique=True, verbose_name="name"),
                ),
                (
                    "id",
                    hashid_field.field.HashidAutoField(
                        alphabet="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
                        min_length=7,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "PI",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="PI_of2",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True, to="auth.Permission", verbose_name="permissions"
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name="ClassGroup2",
            fields=[
                (
                    "name",
                    models.CharField(max_length=150, unique=True, verbose_name="name"),
                ),
                (
                    "id",
                    hashid_field.field.HashidAutoField(
                        alphabet="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
                        min_length=7,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_resource_threshold", models.PositiveIntegerField(default=300)),
                ("group_resource_threshold", models.PositiveIntegerField(default=0)),
                ("access_code", models.CharField(max_length=256)),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True, to="auth.Permission", verbose_name="permissions"
                    ),
                ),
                (
                    "professor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="professor_of2",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="in_class2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="members2",
                to="frontend.classgroup2",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="member_of2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="members2",
                to="frontend.researchgroup2",
            ),
        ),
        migrations.RunPython(convert_objs),
    ]
